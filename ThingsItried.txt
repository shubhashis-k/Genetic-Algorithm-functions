
>> Genetic

FitnessRun =

     0


ans =

     0

>> Genetic

FitnessRun =

        1024


ans =

        1024

>> Genetic

FitnessRun =

     4


ans =

     4

>> Genetic

FitnessRun =

     8


ans =

     8

>> Genetic

FitnessRun =

    32


ans =

    32

>> Genetic

FitnessRun =

     5


ans =

     5

>> gap

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> gap

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> gap

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> gap

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> gap

FitnessRun =

   3.6718e-05


ans =

   -0.0061

>> gap

FitnessRun =

    8.3353


ans =

    2.8871

>> gap

FitnessRun =

   19.2448


ans =

    4.3869

>> gap

FitnessRun =

   22.7790


ans =

   -4.7727

>> gap

FitnessRun =

    6.1245


ans =

   -2.4748

>> gap

FitnessRun =

   13.0181


ans =

   -3.6081

>> gap

FitnessRun =

    3.7730


ans =

    1.9424

>> gap

FitnessRun =

   18.1076


ans =

   -4.2553

>> gap

FitnessRun =

   14.4996


ans =

    3.8078

>> Genetic

FitnessRun =

    18


ans =

    18

>> Genetic

FitnessRun =

   2.5964e-08


ans =

   1.6113e-04

>> Genetic

FitnessRun =

   2.1458e-10


ans =

  -1.4648e-05

>> Genetic

FitnessRun =

   4.0915e-07


ans =

   6.3965e-04

>> Roulette

FitnessRun =

   1.4136e-07


ans =

  -3.7598e-04

>> Roulette

FitnessRun =

   5.9605e-10


ans =

   2.4414e-05

>> Roulette

FitnessRun =

   1.0514e-08


ans =

  -1.0254e-04

>> Roulette

FitnessRun =

   6.8903e-09


ans =

   8.3008e-05

>> Roulette

FitnessRun =

   2.5964e-08


ans =

   1.6113e-04

>> gap

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> Roulette

FitnessRun =

   1.8030e-06


ans =

   -0.0013

>> Roulette

FitnessRun =

   5.7244e-08


ans =

   2.3926e-04

>> Rank
K>> a(1:5)

ans =

     2     6    10     2     4

K>> a = (5,2)
 a = (5,2)
       |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
K>> a = zeros(5,2)

a =

     0     0
     0     0
     0     0
     0     0
     0     0

K>> a(1:,)
 a(1:,)
     |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
K>> a(1:;)
 a(1:;)
     |
Error: Unbalanced or unexpected parenthesis or bracket.
 
K>> a(:,1)

ans =

     0
     0
     0
     0
     0

K>> a(:,2)

ans =

     0
     0
     0
     0
     0

K>> a(:,3)
Index exceeds matrix dimensions.
 
K>> (1:5)

ans =

     1     2     3     4     5

K>> a(:,3) = 1:5

a =

     0     0     1
     0     0     2
     0     0     3
     0     0     4
     0     0     5

K>> a(:,1) = (1:5)

a =

     1     0     1
     2     0     2
     3     0     3
     4     0     4
     5     0     5

K>> a(:,1) = (5:1)
Improper assignment with rectangular empty matrix.
 
K>> a(:,1) = (5:1:-1)
Improper assignment with rectangular empty matrix.
 
K>> (1:5)

ans =

     1     2     3     4     5

K>> (5:1)

ans =

   Empty matrix: 1-by-0

K>> (5:-1)

ans =

   Empty matrix: 1-by-0

K>> a = (1:5)

a =

     1     2     3     4     5

K>> a = (1:5)

a =

     1     2     3     4     5

K>> a

a =

     1     2     3     4     5

K>> a = (5:-1:1)

a =

     5     4     3     2     1

>> Rank
Error using sortrows
Too many input arguments.

Error in Rank (line 39)
        sortedSelectionProb = sortrows(SelectionProb,1,'descend');
 
>> a = (10,2)
 a = (10,2)
        |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a = zeros(10,2)

a =

     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0
     0     0

>> a(:,1)

ans =

     0
     0
     0
     0
     0
     0
     0
     0
     0
     0

>> a(:,1) = (1,10,-1)
 a(:,1) = (1,10,-1)
            |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a(:,1) = (1,-1,10)
 a(:,1) = (1,-1,10)
            |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> (1,-1,10)
 (1,-1,10)
   |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> (1,10,-1)
 (1,10,-1)
   |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a(:,1) = (1:-1:10)
Improper assignment with rectangular empty matrix.
 
>> a(:,1) = (1:10:-1)
Improper assignment with rectangular empty matrix.
 
>> (1:10:-1)

ans =

   Empty matrix: 1-by-0

>> (1:-1:10)

ans =

   Empty matrix: 1-by-0

>> (10:1:-1)

ans =

   Empty matrix: 1-by-0

>> (10:-1:1)

ans =

    10     9     8     7     6     5     4     3     2     1

>> a(:,1) = (10:1:-1)
Improper assignment with rectangular empty matrix.
 
>> a(:,1) = (10:-1:1)

a =

    10     0
     9     0
     8     0
     7     0
     6     0
     5     0
     4     0
     3     0
     2     0
     1     0

>> a(:,2) = (1:1:10)

a =

    10     1
     9     2
     8     3
     7     4
     6     5
     5     6
     4     7
     3     8
     2     9
     1    10

>> b = sort(a)

b =

     1     1
     2     2
     3     3
     4     4
     5     5
     6     6
     7     7
     8     8
     9     9
    10    10

>> b = sort(a,1)

b =

     1     1
     2     2
     3     3
     4     4
     5     5
     6     6
     7     7
     8     8
     9     9
    10    10

>> b = sort(a,2)

b =

     1    10
     2     9
     3     8
     4     7
     5     6
     5     6
     4     7
     3     8
     2     9
     1    10

>> b = sort(a,1)

b =

     1     1
     2     2
     3     3
     4     4
     5     5
     6     6
     7     7
     8     8
     9     9
    10    10

>> a

a =

    10     1
     9     2
     8     3
     7     4
     6     5
     5     6
     4     7
     3     8
     2     9
     1    10

>> a = sortrow(a,1)
Undefined function 'sortrow' for input arguments of type 'double'.
 
Did you mean:
>> a = sortrows(a,1)

a =

     1    10
     2     9
     3     8
     4     7
     5     6
     6     5
     7     4
     8     3
     9     2
    10     1

>> a = sortrows(a,1)

a =

     1    10
     2     9
     3     8
     4     7
     5     6
     6     5
     7     4
     8     3
     9     2
    10     1

>> a

a =

     1    10
     2     9
     3     8
     4     7
     5     6
     6     5
     7     4
     8     3
     9     2
    10     1

>> a(:,1)

ans =

     1
     2
     3
     4
     5
     6
     7
     8
     9
    10

>> a(PopLength:,1)
 a(PopLength:,1)
             |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a(PopLength:1,1)

ans =

   Empty matrix: 0-by-1

>> a(PopLength:1:-1,1)

ans =

   Empty matrix: 0-by-1

>> a(PopLength:-1:1,1)

ans =

    10
     9
     8
     7
     6
     5
     4
     3
     2
     1

>> a(45,1;20,2;45,3)
 a(45,1;20,2;45,3)
       |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> a = (45,1;20,2;45,3)
 a = (45,1;20,2;45,3)
        |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a = (45,1)
 a = (45,1)
        |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a(1;2;3)
 a(1;2;3)
    |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> a = (1,2;3,4)
 a = (1,2;3,4)
       |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> a = [1,2;3,4]

a =

     1     2
     3     4

>> a(2:-1:1,1)

ans =

     3
     1

>> Rank
>> Rank
>> Rank
>> Rank
>> Rank
>> Rank
>> Rank
>> Rank
>> Rank
Attempted to access CurrentPop(0.1,:); index must be a positive integer or logical.

Error in Rank (line 52)
                    SelectedPop(i,:) = CurrentPop(rankedProb(j,2),:);
 
>> Rank

FitnessRun =

    0.1401


ans =

    0.3743

>> Rank

FitnessRun =

    0.0792


ans =

   -0.2814

>> Rank

FitnessRun =

    3.6131


ans =

   -1.9008

>> Rank

FitnessRun =

    0.9391


ans =

   -0.9691

>> Rank

FitnessRun =

    0.0292


ans =

   -0.1710

>> Rank
>> Rank
>> Rank
>> Rank

FitnessRun =

    2.7799


ans =

   -1.6673

>> Rank

FitnessRun =

    0.0549


ans =

   -0.2344

>> Rank

FitnessRun =

    1.8100


ans =

    1.3454

>> Rank

FitnessRun =

    0.2850


ans =

   -0.5339

>> testga

FitnessRun =

   6.7732e-06


ans =

    0.0026

>> testga

FitnessRun =

   5.9896e-05


ans =

    0.0077

>> testga

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> testga

FitnessRun =

   4.3858e-04


ans =

    0.0209

>> testga

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> testga

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> testga

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> testga

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> Roulette

FitnessRun =

   1.2705e-07


ans =

  -3.5645e-04

>> Roulette

FitnessRun =

   2.1458e-10


ans =

  -1.4648e-05

>> Roulette

FitnessRun =

   3.9675e-07


ans =

   6.2988e-04

>> Roulette

FitnessRun =

   2.5964e-08


ans =

   1.6113e-04

>> Roulette

FitnessRun =

   1.9312e-09


ans =

  -4.3945e-05

>> testga

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> testga

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> testga

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> Roulette

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> Roulette

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> Rank

FitnessRun =

    0.0608


ans =

   -0.2465

>> Rank

FitnessRun =

   10.6946


ans =

    3.2703

>> Rank

FitnessRun =

    0.2976


ans =

   -0.5455

>> Rank

FitnessRun =

    7.3239


ans =

   -2.7063

>> Rank

FitnessRun =

    0.0012


ans =

    0.0351

>> Rank
Attempted to access CurrentPop(11,:); index out of bounds because size(CurrentPop)=[10,20].

Error in Rank (line 56)
                    SelectedPop(i,:) = CurrentPop(rankedProb(j,1),:);
 
>> Rank
Index exceeds matrix dimensions.

Error in Rank (line 48)
            rankedProb(1,i) = rankedProb(1,i) + rankedProb(1,i-1);
 
>> a

a =

     1     2
     3     4

>> a(1,1)

ans =

     1

>> a(1,2)

ans =

     2

>> a(2,2)

ans =

     4

>> a(2,1)

ans =

     3

>> Rank
>> Rank
>> Rank
K>> max(rankedProb(:,1))

ans =

    10

>> Rank
K>> max(rankedProb(:,2))

ans =

    5.5000

>> Rank

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> Rank

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> Rank

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> Rank

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> Rank

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> Rank

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> a = randi([1,10],1,10)

a =

     8    10     9     6     7    10     2     2     4     3

>> a = randi([1,10],,10)
 a = randi([1,10],,10)
                  |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
Did you mean:
>> a = randi([1,10],10,1)

a =

     9
     7
     4
     5
     1
     6
     3
     4
     4
     7

>> a = randi([1,10],10,2)

a =

     2     2
     5     3
     4     7
    10     2
    10     3
     4     4
     4     8
     7     7
     5     6
     9     6

>> a = randi([1,10],10,2)

a =

     2     7
     8     6
     2     7
     2     6
     6     9
     3     5
     8     9
     2     8
     6     3
     3     9

>> a = sort(a,1)

a =

     2     3
     2     5
     2     6
     2     6
     3     7
     3     7
     6     8
     6     9
     8     9
     8     9

>> a = randi([1,10],10,2)

a =

     8     8
     1     4
     1     8
     3     2
     4     6
     1     9
     8     2
     8     5
     6     2
     3     6

>> b = sort(a,1)

b =

     1     2
     1     2
     1     2
     3     4
     3     5
     4     6
     6     6
     8     8
     8     8
     8     9

>> b = sort(a,2)

b =

     8     8
     1     4
     1     8
     2     3
     4     6
     1     9
     2     8
     5     8
     2     6
     3     6

>> a

a =

     8     8
     1     4
     1     8
     3     2
     4     6
     1     9
     8     2
     8     5
     6     2
     3     6

>> b = sort(a,2)

b =

     8     8
     1     4
     1     8
     2     3
     4     6
     1     9
     2     8
     5     8
     2     6
     3     6

>> a = randi([1,10],10,2)

a =

     7     5
     3     3
     1     6
     2     3
     6     2
     5     9
     3     4
     6     1
    10     8
     3     6

>> b = sort(a,2)

b =

     5     7
     3     3
     1     6
     2     3
     2     6
     5     9
     3     4
     1     6
     8    10
     3     6

>> a = 1

a =

     1

>> b = 2;
>> deal(a,b);
Error using deal (line 37)
The number of outputs should match the number of inputs.
 
>> [a,b] = deal(a,b)

a =

     1


b =

     2

>> [b,a] = deal(a,b)

b =

     1


a =

     2

>> a = [1:5];
>> b = [6:10];
>> a

a =

     1     2     3     4     5

>> b

b =

     6     7     8     9    10

>> a(1;1)
 a(1;1)
    |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> a(1,1)

ans =

     1

>> a(:,1)

ans =

     1

>> a(1,:)

ans =

     1     2     3     4     5

>> a(1,1:3)

ans =

     1     2     3

>> [b(1,1:3),a(1,1:3)] = deal(a(1,1:3),b(1,1:3))

b =

     1     2     3     9    10


a =

     6     7     8     4     5

>> twopointcrossover
K>> a = zeros(4,2)

a =

     0     0
     0     0
     0     0
     0     0

K>> A=reshape(1:16,4,4)

A =

     1     5     9    13
     2     6    10    14
     3     7    11    15
     4     8    12    16

K>> B=(17:20)'

B =

    17
    18
    19
    20

K>> C = [A(:,1:2) B A(:,3:4)]

C =

     1     5    17     9    13
     2     6    18    10    14
     3     7    19    11    15
     4     8    20    12    16

K>> a

a =

     0     0
     0     0
     0     0
     0     0

K>> b = zeros(4,4)

b =

     0     0     0     0
     0     0     0     0
     0     0     0     0
     0     0     0     0

K>> b(1:)
 b(1:)
     |
Error: Unbalanced or unexpected parenthesis or bracket.
 
K>> b(1,)
 b(1,)
     |
Error: Unbalanced or unexpected parenthesis or bracket.
 
K>> b(1,:)

ans =

     0     0     0     0

K>> b(:,1)

ans =

     0
     0
     0
     0

K>> b(:,1:2) = 
 b(:,1:2) = 
            |
Error: Expression or statement is incomplete or incorrect.
 
K>> b(1:2,1) =
 b(1:2,1) =
           |
Error: Expression or statement is incomplete or incorrect.
 
K>> b(:,1)

ans =

     0
     0
     0
     0

K>> b(1:2,1)

ans =

     0
     0

K>> b(:,1:2)

ans =

     0     0
     0     0
     0     0
     0     0

>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> a = [1:5];
>> a

a =

     1     2     3     4     5

>> a = [1:6];
>> [b(1,1:3),a(1,1:3)] = deal(a(1,1:3),b(1,1:3))

b =

     1     2     3     0
     0     0     0     0
     0     0     0     0
     0     0     0     0


a =

     0     0     0     4     5     6

>> a = [1:6]

a =

     1     2     3     4     5     6

>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> twopointcrossover
>> twopointcrossover

ans =

     1


ans =

     1

K>> SelectedPop(gene1)

ans =

     1

K>> SelectedPop(1)

ans =

     1

K>> SelectedPop(1,:)

ans =

  Columns 1 through 19

     1     0     1     0     0     1     1     0     0     0     1     1     0     1     1     1     0     0     0

  Column 20

     0

K>> SelectedPop(1,:)

ans =

     1     0     1     0     0     1     1     0     0     0     1     1     0     1     1     1     0     0     0     0

>> twopointcrossover

ans =

     1     0     1     1     1     1     1     1     1     1     0     0     1     1     1     1     1     1     0     0


ans =

     0     1     1     1     1     0     1     0     1     0     0     0     0     1     0     0     1     0     0     0


ans =

     1     0     1     1     1     1     1     1     1     1     0     0     1     1     1     1     1     1     0     0


ans =

     0     1     1     1     1     0     1     0     1     0     0     0     0     1     0     0     1     0     0     0

>> twopointcrossover
>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> twopointcrossover

FitnessRun =

   2.1458e-10


ans =

  -1.4648e-05

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> twopointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> npointcrossover
>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> npointcrossover
>> npointcrossover
>> npointcrossover

FitnessRun =

   3.9675e-07


ans =

  -6.2988e-04

>> randperm(5)

ans =

     2     4     3     1     5

>> i = rand()

i =

    0.3712

>> i = rand(5,1)

i =

    0.1169
    0.7362
    0.4092
    0.4494
    0.6459

>> i = rand(1,50)

i =

  Columns 1 through 14

    0.5454    0.9684    0.4034    0.4170    0.9108    0.9683    0.2703    0.7593    0.0845    0.1058    0.4943    0.0779    0.1518    0.2726

  Columns 15 through 28

    0.5787    0.6564    0.5938    0.3060    0.2383    0.7086    0.5740    0.6969    0.3416    0.7121    0.1821    0.5437    0.1559    0.5294

  Columns 29 through 42

    0.3062    0.6928    0.0055    0.9301    0.9838    0.7384    0.1193    0.2383    0.6635    0.0872    0.2213    0.6480    0.2990    0.8517

  Columns 43 through 50

    0.7785    0.0000    0.7705    0.9447    0.4076    0.0388    0.6457    0.6928

>> i = rand(1,2)

i =

    0.6243    0.9449

>> i = rand(2,1)

i =

    0.6044
    0.8064

>> i = rand(50,1);
>> for j = 1:1:50
if(i(j)>.5)
p = p + 1
end
end
Undefined function or variable 'p'.
 
>> p = 0

p =

     0

>> for j = 1:1:50
if(i(j)>.5)
p = p + 1
end
end

p =

     1


p =

     2


p =

     3


p =

     4


p =

     5


p =

     6


p =

     7


p =

     8


p =

     9


p =

    10


p =

    11


p =

    12


p =

    13


p =

    14


p =

    15


p =

    16


p =

    17


p =

    18


p =

    19


p =

    20


p =

    21


p =

    22


p =

    23


p =

    24


p =

    25


p =

    26


p =

    27


p =

    28

>> 28/50

ans =

    0.5600

>> i = rand(50,1);
>> testga

i =

    0.7558
    0.9072
    0.0042
    0.5127
    0.9933
    0.4914
    0.0447
    0.2384
    0.3744
    0.2529
    0.0317
    0.1665
    0.1202
    0.0145
    0.4228
    0.6523
    0.7916
    0.5127
    0.1212
    0.7565
    0.9580
    0.7245
    0.8891
    0.7480
    0.9322
    0.6282
    0.6606
    0.9749
    0.1545
    0.5259
    0.6467
    0.7564
    0.0717
    0.8343
    0.1775
    0.1194
    0.7085
    0.5294
    0.9636
    0.0158
    0.8764
    0.8743
    0.8503
    0.5186
    0.6079
    0.4199
    0.6900
    0.3717
    0.1012
    0.6871


ans =

    0.6000

>> testga

i =

    0.6903
    0.0305
    0.3562
    0.1902
    0.6982
    0.1978
    0.0979
    0.5192
    0.1430
    0.3806
    0.2569
    0.0150
    0.3086
    0.6864
    0.6951
    0.0627
    0.1326
    0.6787
    0.3071
    0.8387
    0.9757
    0.2671
    0.2921
    0.9578
    0.4336
    0.1761
    0.2359
    0.7713
    0.2567
    0.5964
    0.1625
    0.9246
    0.0604
    0.9246
    0.1738
    0.4353
    0.9847
    0.6666
    0.6276
    0.6855
    0.0844
    0.7801
    0.1438
    0.8907
    0.5513
    0.1826
    0.1725
    0.4342
    0.0507
    0.4596


ans =

    0.4000

>> testga

i =

    0.1084
    0.5113
    0.8378
    0.2475
    0.8022
    0.8376
    0.4463
    0.7914
    0.7050
    0.0197
    0.9549
    0.7520
    0.6702
    0.3153
    0.6282
    0.8111
    0.4370
    0.5677
    0.3542
    0.4383
    0.6697
    0.2748
    0.6876
    0.9698
    0.9447
    0.6040
    0.5065
    0.1765
    0.8689
    0.9034
    0.3072
    0.2317
    0.3456
    0.3726
    0.5371
    0.6225
    0.8755
    0.4976
    0.9976
    0.2583
    0.1747
    0.1330
    0.3207
    0.7814
    0.9957
    0.0499
    0.6508
    0.8779
    0.5276
    0.7285


ans =

    0.6000

>> testga

i =

    0.7908
    0.0008
    0.2573
    0.3088
    0.9366
    0.7951
    0.3514
    0.7618
    0.0314
    0.7725
    0.8898
    0.9111
    0.6354
    0.8357
    0.4580
    0.8114
    0.7343
    0.3849
    0.1706
    0.8895
    0.3517
    0.7333
    0.4812
    0.9675
    0.5029
    0.5949
    0.8345
    0.6128
    0.1904
    0.5981
    0.6394
    0.4777
    0.3393
    0.7984
    0.8654
    0.4398
    0.7896
    0.2512
    0.6853
    0.4916
    0.4073
    0.0193
    0.0819
    0.2130
    0.9994
    0.4867
    0.0133
    0.9897
    0.8277
    0.8428


ans =

    0.5600

>> testga

i =

    0.3925
    0.6605
    0.6036
    0.6653
    0.8777
    0.4070
    0.6569
    0.1845
    0.7968
    0.6441
    0.1167
    0.0754
    0.0344
    0.5590
    0.9483
    0.4372
    0.0727
    0.3083
    0.3910
    0.7370
    0.3712
    0.9508
    0.3752
    0.5450
    0.5458
    0.3455
    0.2066
    0.7203
    0.8633
    0.1530
    0.5206
    0.8506
    0.0260
    0.2351
    0.5263
    0.4684
    0.9750
    0.7905
    0.0003
    0.8979
    0.7514
    0.5071
    0.9174
    0.9923
    0.6485
    0.2461
    0.4742
    0.8242
    0.8156
    0.0806


ans =

    0.5600

>> testga

i =

    0.5238
    0.7633
    0.9114
    0.5513
    0.9737
    0.0998
    0.3848
    0.7628
    0.5082
    0.5927
    0.2939
    0.8873
    0.1093
    0.7050
    0.2902
    0.6753
    0.5482
    0.2677
    0.9035
    0.1945
    0.6787
    0.9332
    0.5627
    0.7927
    0.2491
    0.2877
    0.5312
    0.2818
    0.4712
    0.8550
    0.7215
    0.5692
    0.5798
    0.7711
    0.0041
    0.8508
    0.0762
    0.2435
    0.1065
    0.6530
    0.9565
    0.3084
    0.6380
    0.3349
    0.9362
    0.5083
    0.9595
    0.7844
    0.3073
    0.9250


ans =

    0.6400

>> testga

i =

    0.4691
    0.1595
    0.2198
    0.8223
    0.7443
    0.3042
    0.6615
    0.0264
    0.1404
    0.3685
    0.6390
    0.4893
    0.4935
    0.3200
    0.4061
    0.2855
    0.6010
    0.7863
    0.4479
    0.6789
    0.3244
    0.0494
    0.5218
    0.4850
    0.4782
    0.6500
    0.4571
    0.3293
    0.1554
    0.9285
    0.8397
    0.0240
    0.1650
    0.9346
    0.8396
    0.1252
    0.7144
    0.5126
    0.1778
    0.8098
    0.6432
    0.9375
    0.9959
    0.2287
    0.6696
    0.5558
    0.0660
    0.9560
    0.6147
    0.7023


ans =

    0.4800

>> testga

i =

    0.8936
    0.8122
    0.0906
    0.9100
    0.9989
    0.3387
    0.7083
    0.9508
    0.6931
    0.8369
    0.3725
    0.1338
    0.0694
    0.2168
    0.7719
    0.9903
    0.0052
    0.7348
    0.5968
    0.8523
    0.6218
    0.6097
    0.0050
    0.9525
    0.0550
    0.2601
    0.8649
    0.2668
    0.0419
    0.2410
    0.0480
    0.1660
    0.1863
    0.5202
    0.9648
    0.6506
    0.4758
    0.6376
    0.3984
    0.3749
    0.3695
    0.6280
    0.3732
    0.5306
    0.1833
    0.9157
    0.0021
    0.6269
    0.4357
    0.5065


ans =

    0.5200

>> testga

i =

    0.6886
    0.9982
    0.5387
    0.2773
    0.8889
    0.4069
    0.7649
    0.3440
    0.3399
    0.8823
    0.4567
    0.6206
    0.5322
    0.9628
    0.9298
    0.4006
    0.7473
    0.7695
    0.7322
    0.6443
    0.3120
    0.9629
    0.3182
    0.0156
    0.0517
    0.1234
    0.9189
    0.7840
    0.1324
    0.8163
    0.6221
    0.5447
    0.0713
    0.2484
    0.3910
    0.3323
    0.0498
    0.2584
    0.8420
    0.8856
    0.9518
    0.3666
    0.5923
    0.6427
    0.3776
    0.0758
    0.0261
    0.7009
    0.2003
    0.5705


ans =

    0.5400

>> testga

i =

    0.2253
    0.7714
    0.4225
    0.2769
    0.2318
    0.7680
    0.7763
    0.5010
    0.2767
    0.3432
    0.7122
    0.5428
    0.9511
    0.8631
    0.7919
    0.2251
    0.1374
    0.5236
    0.9369
    0.6795
    0.1266
    0.5244
    0.2195
    0.9998
    0.3012
    0.7377
    0.5763
    0.2781
    0.2324
    0.3192
    0.4963
    0.9519
    0.5204
    0.4636
    0.2448
    0.5317
    0.6613
    0.7437
    0.5818
    0.2430
    0.4474
    0.5634
    0.2491
    0.9155
    0.0193
    0.3173
    0.4701
    0.6315
    0.1142
    0.7687


ans =

    0.5200

>> testga

i =

    0.5580
    0.7580
    0.1881
    0.0911
    0.2742
    0.5838
    0.7314
    0.9890
    0.4705
    0.9552
    0.4391
    0.6491
    0.7949
    0.5979
    0.9092
    0.5182
    0.1901
    0.0036
    0.6361
    0.4943
    0.9873
    0.9408
    0.1494
    0.5056
    0.0623
    0.1468
    0.4668
    0.7019
    0.3706
    0.9245
    0.4866
    0.7710
    0.6789
    0.5763
    0.3898
    0.6942
    0.2437
    0.2493
    0.6934
    0.4660
    0.8426
    0.3092
    0.5903
    0.0431
    0.0649
    0.3454
    0.7994
    0.9244
    0.9020
    0.5915


ans =

    0.5600

>> testga

i =

    0.2002
    0.3762
    0.5052
    0.8764
    0.3279
    0.6512
    0.0222
    0.3903
    0.3617
    0.5205
    0.4278
    0.1710
    0.9881
    0.4018
    0.9453
    0.9267
    0.4489
    0.2977
    0.5965
    0.0961
    0.7060
    0.0774
    0.7645
    0.4764
    0.5823
    0.6972
    0.7906
    0.9920
    0.9129
    0.3813
    0.4729
    0.4425
    0.7583
    0.6902
    0.9533
    0.1555
    0.3995
    0.8632
    0.1151
    0.9397
    0.4440
    0.7910
    0.0917
    0.6839
    0.8468
    0.1314
    0.1079
    0.1317
    0.0410
    0.1996


ans =

    0.4600

>> testga

i =

    0.2526
    0.9656
    0.1735
    0.5622
    0.1208
    0.7570
    0.9397
    0.1642
    0.2839
    0.3174
    0.8150
    0.8431
    0.0693
    0.0296
    0.5555
    0.6155
    0.4103
    0.5321
    0.2566
    0.2409
    0.0057
    0.1288
    0.2995
    0.5232
    0.5655
    0.5372
    0.9755
    0.8717
    0.9236
    0.3550
    0.0777
    0.4674
    0.2854
    0.9171
    0.8227
    0.5186
    0.4072
    0.9656
    0.6740
    0.0026
    0.7104
    0.2995
    0.5337
    0.5560
    0.4323
    0.2575
    0.5317
    0.8915
    0.8777
    0.5915


ans =

    0.5400

>> testga

i =

    0.9020
    0.9104
    0.1826
    0.8463
    0.8301
    0.0177
    0.8522
    0.6363
    0.3479
    0.2056
    0.6544
    0.2283
    0.8959
    0.2437
    0.4740
    0.0718
    0.2020
    0.6180
    0.7729
    0.4503
    0.1892
    0.3660
    0.9534
    0.5877
    0.7318
    0.4706
    0.2620
    0.0123
    0.7541
    0.1174
    0.7930
    0.2462
    0.1135
    0.5835
    0.8905
    0.7586
    0.7207
    0.2865
    0.2884
    0.4085
    0.3517
    0.0566
    0.1029
    0.5524
    0.8767
    0.5837
    0.4967
    0.6021
    0.0655
    0.7181


ans =

    0.4800

>> testga

i =

    0.8603
    0.9836
    0.1935
    0.3264
    0.4400
    0.3578
    0.6717
    0.2493
    0.4795
    0.3283
    0.6423
    0.8749
    0.4270
    0.7819
    0.8590
    0.3843
    0.6646
    0.6658
    0.4720
    0.1999
    0.8489
    0.2594
    0.8972
    0.4886
    0.8641
    0.5651
    0.8634
    0.5632
    0.6945
    0.6975
    0.9676
    0.8372
    0.5252
    0.6284
    0.4336
    0.4171
    0.4359
    0.4978
    0.0060
    0.9013
    0.4784
    0.4545
    0.8958
    0.6302
    0.3671
    0.3351
    0.3618
    0.5190
    0.2487
    0.6934


ans =

    0.5200

>> testga

i =

    0.5288
    0.4755
    0.4979
    0.1656
    0.9456
    0.9985
    0.5638
    0.6615
    0.9461
    0.3874
    0.0348
    0.3722
    0.6996
    0.5448
    0.4541
    0.3137
    0.5449
    0.9912
    0.9046
    0.4258
    0.0894
    0.4360
    0.4804
    0.9657
    0.1657
    0.8971
    0.4754
    0.8503
    0.8492
    0.4957
    0.2512
    0.2429
    0.6579
    0.5153
    0.6090
    0.0253
    0.2712
    0.0729
    0.1658
    0.4662
    0.2366
    0.8789
    0.4434
    0.0947
    0.0136
    0.4333
    0.0371
    0.2147
    0.2090
    0.3759


ans =

    0.3800

>> testga

i =

    0.2195
    0.2686
    0.7611
    0.1510
    0.0953
    0.6172
    0.3010
    0.1199
    0.8634
    0.2044
    0.1638
    0.4840
    0.4221
    0.1715
    0.7495
    0.8743
    0.9580
    0.1352
    0.7093
    0.1411
    0.3747
    0.1719
    0.7445
    0.4619
    0.4010
    0.9036
    0.7072
    0.0932
    0.2025
    0.6601
    0.1881
    0.9570
    0.6588
    0.0413
    0.4437
    0.8173
    0.4039
    0.2242
    0.7775
    0.6269
    0.5112
    0.7729
    0.3655
    0.4451
    0.6884
    0.8218
    0.6236
    0.4743
    0.5741
    0.1094


ans =

    0.4400

>> testga

i =

    0.1464
    0.3592
    0.6407
    0.7687
    0.6203
    0.4334
    0.3355
    0.1262
    0.5343
    0.6762
    0.1617
    0.1633
    0.7049
    0.9102
    0.0974
    0.8676
    0.3615
    0.4680
    0.9915
    0.8963
    0.4440
    0.5617
    0.4930
    0.7241
    0.9962
    0.3868
    0.5442
    0.8910
    0.7941
    0.0155
    0.8338
    0.7521
    0.9616
    0.1523
    0.7452
    0.7919
    0.9923
    0.8946
    0.6533
    0.8139
    0.6169
    0.9560
    0.8354
    0.7555
    0.9968
    0.3260
    0.7475
    0.7637
    0.2876
    0.2896


ans =

    0.6400

>> testga

i =

    0.3716
    0.9923
    0.6795
    0.3189
    0.4218
    0.1835
    0.1478
    0.7687
    0.0381
    0.2250
    0.8562
    0.3687
    0.0595
    0.4597
    0.3175
    0.1837
    0.3884
    0.7293
    0.1644
    0.4107
    0.3581
    0.4783
    0.5878
    0.8464
    0.1965
    0.5267
    0.6632
    0.2964
    0.9355
    0.7910
    0.6695
    0.0205
    0.2419
    0.0621
    0.3048
    0.4460
    0.2904
    0.1349
    0.0614
    0.8937
    0.2660
    0.3790
    0.5416
    0.5297
    0.6689
    0.6034
    0.7054
    0.7782
    0.4898
    0.4224


ans =

    0.3800

>> testga

i =

    0.6421
    0.1231
    0.3062
    0.7227
    0.1785
    0.3167
    0.3810
    0.4506
    0.1137
    0.2122
    0.6268
    0.8494
    0.6660
    0.3337
    0.8815
    0.0053
    0.4396
    0.2684
    0.4002
    0.2162
    0.3130
    0.0447
    0.1187
    0.6237
    0.7925
    0.0259
    0.3561
    0.3035
    0.4305
    0.2797
    0.0976
    0.3328
    0.8801
    0.3250
    0.3308
    0.7088
    0.5154
    0.5505
    0.5832
    0.2296
    0.8057
    0.0662
    0.0605
    0.3248
    0.1829
    0.4397
    0.1956
    0.7502
    0.7560
    0.5674


ans =

    0.3400

>> testga

i =

    0.2176
    0.0426
    0.7181
    0.8262
    0.5394
    0.9654
    0.7925
    0.4285
    0.2909
    0.8160
    0.6922
    0.4837
    0.8058
    0.9591
    0.4797
    0.3896
    0.1982
    0.0416
    0.2613
    0.8746
    0.9834
    0.2501
    0.7040
    0.1358
    0.8977
    0.3751
    0.9762
    0.9728
    0.5533
    0.5096
    0.8563
    0.3250
    0.8106
    0.9863
    0.1732
    0.2193
    0.2512
    0.2130
    0.4115
    0.7422
    0.7438
    0.0790
    0.4795
    0.4976
    0.6554
    0.8860
    0.9870
    0.2178
    0.0495
    0.5081


ans =

    0.5200

>> testga

i =

    0.8932
    0.9753
    0.8215
    0.2987
    0.2453
    0.2931
    0.0901
    0.1440
    0.0319
    0.0845
    0.5055
    0.8211
    0.6868
    0.8101
    0.1976
    0.0618
    0.8074
    0.4808
    0.3798
    0.2011
    0.7653
    0.9091
    0.6234
    0.6451
    0.2843
    0.9925
    0.1235
    0.2934
    0.6446
    0.0090
    0.6940
    0.4112
    0.5345
    0.7162
    0.0724
    0.8495
    0.6383
    0.5111
    0.0015
    0.3814
    0.8674
    0.3180
    0.7148
    0.8157
    0.4768
    0.3389
    0.3119
    0.0356
    0.1436
    0.0123


ans =

    0.4600

>> testga

i =

    0.0808
    0.3360
    0.8233
    0.2612
    0.4464
    0.6991
    0.7293
    0.4401
    0.1601
    0.7351
    0.6432
    0.3295
    0.0540
    0.0172
    0.1529
    0.5778
    0.8095
    0.0518
    0.8625
    0.1276
    0.2370
    0.2596
    0.4535
    0.4242
    0.3506
    0.8595
    0.3801
    0.9658
    0.1419
    0.2739
    0.9982
    0.0688
    0.1926
    0.9897
    0.6843
    0.3392
    0.6010
    0.5693
    0.1169
    0.0397
    0.0771
    0.6306
    0.7168
    0.5926
    0.9171
    0.5667
    0.2310
    0.1593
    0.9485
    0.0905


ans =

    0.4200

>> testga

i =

    0.0481
    0.3776
    0.4024
    0.8996
    0.3934
    0.1528
    0.2083
    0.6126
    0.4989
    0.7764
    0.2866
    0.4315
    0.0258
    0.8525
    0.2976
    0.5665
    0.7061
    0.8581
    0.2790
    0.0769
    0.2623
    0.6197
    0.1840
    0.8652
    0.9026
    0.1385
    0.7410
    0.5360
    0.1291
    0.9259
    0.9091
    0.4597
    0.2742
    0.4505
    0.4091
    0.9941
    0.9057
    0.6964
    0.6237
    0.8070
    0.1162
    0.4257
    0.8628
    0.5608
    0.1241
    0.7138
    0.5153
    0.3510
    0.7557
    0.9841


ans =

    0.5000

>> testga

i =

    0.2856
    0.7682
    0.8903
    0.1147
    0.1889
    0.8070
    0.3110
    0.5587
    0.3342
    0.0062
    0.5515
    0.7508
    0.7269
    0.2856
    0.1779
    0.5910
    0.5481
    0.8988
    0.4285
    0.3311
    0.9758
    0.5537
    0.6648
    0.2954
    0.3439
    0.9723
    0.7261
    0.4653
    0.8013
    0.5098
    0.7818
    0.7656
    0.0791
    0.7862
    0.5985
    0.1035
    0.5832
    0.6274
    0.3966
    0.5851
    0.6865
    0.6603
    0.9592
    0.1711
    0.7716
    0.9950
    0.8585
    0.1055
    0.7556
    0.6466


ans =

    0.6400

>> testga

i =

    0.9314
    0.3417
    0.5293
    0.2243
    0.0275
    0.8407
    0.5103
    0.9154
    0.9103
    0.5624
    0.8110
    0.9157
    0.3650
    0.4215
    0.2570
    0.7101
    0.5551
    0.9847
    0.4729
    0.5067
    0.6529
    0.7669
    0.4087
    0.9707
    0.1243
    0.5764
    0.4604
    0.0757
    0.4073
    0.8466
    0.8149
    0.6508
    0.0389
    0.8509
    0.3655
    0.9798
    0.8456
    0.0587
    0.8988
    0.8590
    0.8842
    0.9854
    0.1007
    0.6343
    0.5748
    0.9856
    0.5578
    0.2828
    0.8179
    0.3893


ans =

    0.6400

>> testga

i =

    0.1650
    0.6336
    0.2061
    0.0217
    0.7497
    0.9434
    0.8496
    0.7709
    0.7005
    0.8468
    0.6345
    0.7778
    0.1375
    0.2024
    0.9614
    0.9070
    0.4969
    0.7618
    0.6521
    0.0021
    0.2041
    0.4892
    0.6049
    0.1008
    0.3379
    0.3439
    0.8485
    0.0814
    0.0541
    0.7975
    0.7736
    0.0402
    0.3369
    0.3427
    0.7667
    0.9389
    0.2187
    0.2682
    0.7681
    0.5303
    0.0358
    0.4708
    0.2839
    0.9512
    0.4656
    0.9232
    0.7233
    0.6681
    0.4073
    0.0048


ans =

    0.5000

>> testga

i =

    0.1988
    0.6500
    0.9793
    0.5123
    0.4191
    0.9156
    0.6796
    0.3705
    0.5080
    0.2565
    0.0440
    0.0403
    0.6249
    0.4801
    0.6511
    0.9872
    0.9345
    0.1701
    0.7596
    0.8452
    0.0388
    0.6984
    0.3957
    0.3074
    0.7707
    0.0336
    0.1308
    0.4436
    0.3924
    0.1093
    0.8876
    0.1073
    0.8094
    0.7007
    0.4006
    0.8911
    0.8773
    0.8449
    0.8205
    0.9821
    0.3857
    0.4521
    0.0535
    0.6229
    0.5894
    0.9293
    0.3612
    0.6913
    0.1019
    0.7491


ans =

    0.5400

>> testga

i =

    0.9420
    0.1185
    0.4539
    0.9077
    0.1076
    0.0630
    0.1194
    0.7996
    0.3936
    0.6819
    0.2388
    0.9073
    0.6053
    0.0201
    0.4699
    0.8729
    0.9939
    0.8978
    0.8032
    0.9594
    0.0471
    0.3389
    0.9867
    0.8418
    0.6436
    0.4187
    0.2269
    0.0623
    0.0589
    0.7595
    0.5652
    0.3798
    0.1706
    0.6686
    0.0728
    0.3900
    0.5260
    0.5403
    0.0582
    0.7263
    0.7068
    0.8146
    0.8294
    0.6906
    0.9750
    0.8649
    0.5145
    0.9920
    0.4520
    0.9274


ans =

    0.5800

>> testga

i =

    0.6269
    0.7964
    0.9431
    0.7659
    0.1069
    0.4645
    0.0540
    0.9978
    0.6350
    0.6704
    0.5651
    0.6083
    0.6808
    0.3204
    0.6488
    0.6791
    0.8134
    0.0779
    0.6118
    0.4493
    0.0787
    0.3120
    0.3346
    0.2594
    0.8852
    0.3584
    0.5536
    0.7717
    0.8141
    0.2332
    0.9759
    0.9793
    0.9488
    0.4078
    0.1848
    0.3127
    0.1184
    0.1153
    0.0539
    0.9007
    0.1845
    0.9467
    0.4383
    0.9860
    0.8622
    0.0497
    0.8322
    0.2596
    0.9445
    0.6316


ans =

    0.5600

>> testga

i =

    0.2109
    0.6845
    0.1804
    0.6701
    0.5415
    0.0309
    0.8848
    0.1000
    0.7882
    0.7931
    0.2261
    0.4923
    0.0782
    0.6895
    0.8277
    0.4294
    0.1657
    0.3400
    0.1822
    0.4231
    0.7524
    0.5153
    0.7240
    0.2122
    0.5604
    0.6083
    0.4670
    0.6730
    0.2530
    0.2728
    0.3109
    0.8556
    0.8541
    0.9651
    0.0621
    0.4777
    0.9359
    0.1793
    0.1396
    0.9783
    0.5796
    0.3400
    0.7456
    0.4222
    0.7187
    0.0293
    0.5331
    0.7791
    0.3676
    0.9693


ans =

    0.5000

>> testga

i =

    0.1848
    0.6530
    0.2075
    0.4142
    0.4963
    0.3679
    0.8512
    0.6930
    0.0176
    0.0937
    0.1839
    0.7502
    0.8485
    0.2375
    0.4831
    0.4488
    0.8423
    0.8539
    0.0727
    0.8095
    0.0574
    0.7555
    0.6926
    0.0010
    0.7965
    0.7518
    0.4679
    0.0091
    0.6801
    0.3757
    0.4318
    0.0967
    0.4208
    0.7487
    0.9035
    0.4138
    0.4149
    0.7411
    0.1416
    0.8732
    0.6822
    0.1008
    0.4851
    0.1605
    0.8294
    0.5644
    0.1068
    0.8779
    0.2002
    0.9739


ans =

    0.4400

>> testga

i =

    0.6867
    0.1528
    0.7638
    0.2729
    0.3999
    0.3056
    0.1650
    0.4383
    0.6547
    0.7939
    0.9052
    0.6185
    0.6897
    0.1213
    0.3822
    0.5739
    0.3174
    0.0337
    0.8749
    0.5516
    0.2545
    0.2353
    0.7356
    0.2113
    0.9380
    0.2256
    0.2466
    0.1566
    0.0944
    0.0840
    0.8369
    0.2542
    0.1264
    0.0468
    0.3818
    0.9784
    0.9582
    0.2053
    0.4650
    0.2748
    0.6585
    0.4580
    0.1581
    0.6095
    0.5785
    0.0865
    0.2322
    0.5701
    0.4299
    0.7306


ans =

    0.4000

>> testga

i =

    0.4402
    0.8937
    0.0334
    0.1166
    0.5747
    0.1245
    0.7900
    0.0431
    0.4983
    0.8201
    0.6181
    0.6099
    0.5660
    0.1909
    0.1010
    0.7461
    0.0317
    0.8376
    0.8692
    0.3126
    0.1347
    0.1993
    0.6258
    0.3525
    0.3599
    0.2509
    0.4231
    0.8233
    0.4824
    0.6480
    0.0556
    0.1345
    0.6702
    0.2273
    0.6319
    0.8192
    0.5247
    0.5096
    0.1619
    0.6202
    0.7193
    0.4989
    0.1443
    0.5470
    0.8534
    0.0611
    0.3255
    0.7053
    0.8561
    0.8045


ans =

    0.5000

>> testga

i =

    0.1161
    0.9980
    0.9413
    0.3412
    0.9718
    0.4822
    0.8391
    0.0227
    0.0571
    0.7764
    0.0711
    0.6789
    0.6537
    0.4192
    0.0804
    0.1300
    0.7587
    0.5823
    0.0539
    0.4061
    0.1937
    0.2596
    0.6591
    0.0646
    0.3274
    0.4740
    0.3929
    0.0832
    0.7732
    0.0949
    0.1068
    0.3550
    0.5319
    0.5512
    0.0965
    0.8489
    0.8008
    0.8051
    0.7650
    0.2018
    0.6624
    0.9198
    0.5060
    0.3962
    0.2535
    0.4528
    0.9722
    0.8727
    0.0275
    0.4981


ans =

    0.4400

>> testga

i =

    0.4090
    0.0983
    0.9336
    0.4433
    0.3091
    0.1152
    0.8705
    0.0110
    0.4322
    0.8378
    0.2416
    0.6809
    0.7287
    0.5050
    0.4111
    0.9257
    0.0201
    0.5240
    0.5763
    0.2484
    0.1903
    0.2861
    0.5773
    0.3785
    0.0832
    0.3678
    0.3762
    0.9259
    0.1289
    0.3214
    0.3963
    0.8375
    0.4113
    0.1899
    0.6212
    0.4257
    0.8083
    0.8662
    0.6490
    0.7262
    0.1622
    0.2999
    0.3434
    0.8694
    0.3534
    0.9519
    0.8126
    0.5868
    0.9112
    0.3136


ans =

    0.4400

>> randperm(1:5)
Error using randperm
Size inputs must be scalar.
 
>> randperm(6)

ans =

     2     6     4     1     5     3

>> randperm(5,2)

ans =

     5     1

>> randperm(2,5)
Error using randperm
K must be less than or equal to N.
 
>> a =  rand(1,50)

a =

  Columns 1 through 14

    0.0730    0.1088    0.8816    0.9129    0.9323    0.5824    0.3508    0.8462    0.5738    0.7142    0.8748    0.7852    0.8175    0.0641

  Columns 15 through 28

    0.4598    0.4064    0.4070    0.1545    0.0008    0.0295    0.6720    0.8335    0.6869    0.6524    0.6760    0.3273    0.4330    0.5967

  Columns 29 through 42

    0.3981    0.2923    0.6835    0.0550    0.9150    0.1539    0.2854    0.6072    0.9945    0.4033    0.4263    0.1993    0.8950    0.0484

  Columns 43 through 50

    0.0553    0.9554    0.9764    0.0896    0.2898    0.6438    0.5616    0.3871

>> uniformcrossover

Mixpossibility =

    0.1194    0.9235    0.9439    0.9721    0.1749    0.2373    0.8733    0.6732    0.8998    0.4369

>> a = zeros(5,2)

a =

     0     0
     0     0
     0     0
     0     0
     0     0

>> a = randperm(5,2)

a =

     2     1

>> a = randperm(10,2)

a =

     7     2

>> a = randperm(10,10)

a =

    10     1     9     2     5     8     3     6     4     7

>> uniformcrossover
K>> SelectedPop(gene1,j)

ans =

     0

K>> SelectedPop(gene1,j:)
 SelectedPop(gene1,j:)
                     |
Error: Unbalanced or unexpected parenthesis or bracket.
 
K>> SelectedPop(gene1,:)

ans =

     0     1     1     0     1     1     1     1     0     0     0     0     1     0     1     0     0     1     1     0

K>> SelectedPop(gene2,:)

ans =

     1     0     0     1     1     0     1     1     0     1     1     1     0     0     0     0     0     0     0     0

K>> SelectedPop(gene1,:)

ans =

     0     1     1     0     1     1     1     1     0     0     0     0     1     0     1     0     0     1     1     0

K>> SelectedPop(gene2,:)

ans =

     1     0     0     1     1     0     1     1     0     1     1     1     0     0     0     0     0     0     0     0

>> uniformcrossover
>> uniformcrossover
>> uniformcrossover

ans =

     0     1     1     1     0     0     1     0     0     0     1     1     0     0     1     1     0     0     1     0


ans =

     1     0     0     1     1     0     1     1     0     0     0     1     0     1     1     0     0     1     1     0


ans =

     0     0     0     1     1     1     0     0     0     1     0     1     0     1     0     0     1     1     1     1


ans =

     0     0     0     1     1     1     0     0     0     1     0     1     0     1     0     0     1     1     1     1

>> uniformcrossover

ans =

     0     1     0     0     1     0     1     1     0     0     1     1     0     0     0     0     0     0     0     0


ans =

     0     1     0     0     1     0     1     1     0     0     1     1     0     0     0     0     0     0     0     0


ans =

     1     0     1     0     0     0     1     1     0     0     0     1     1     0     0     1     1     0     1     0

>> uniformcrossover

ans =

     1     1     0     0     0     0     0     1     1     0     1     0     1     0     0     0     1     1     1     1


ans =

     0     1     1     1     1     1     0     0     1     0     1     1     0     0     1     0     1     0     1     0


ans =

     0     1     1     1     1     1     1     0     0     1     0     0     0     1     0     1     1     0     0     1


ans =

     1     0     1     1     0     1     1     1     1     0     1     1     1     0     0     0     1     0     1     1

>> uniformcrossover

ans =

     0     0     1     0     1     1     1     1     1     1     1     1     0     0     1     1     1     0     1     0


ans =

     0     0     1     0     1     1     1     1     1     1     1     1     0     0     1     1     1     0     1     0


ans =

     0     1     1     1     1     1     1     0     0     0     0     0     0     0     1     0     1     0     1     1

K>> a = [1:6]

a =

     1     2     3     4     5     6

K>> b = [6:11]

b =

     6     7     8     9    10    11

K>> [a(1,1),b(1,1)] = deal(a(1,1),b(1,1))

a =

     1     2     3     4     5     6


b =

     6     7     8     9    10    11

K>> [a(1,1),b(1,1)] = deal(b(1,1),a(1,1))

a =

     6     2     3     4     5     6


b =

     1     7     8     9    10    11

K>> SelectedPop(1,:)

ans =

     1     1     0     0     0     0     0     1     0     1     0     1     1     1     1     0     0     0     1     1

K>> SelectedPop(2,:)

ans =

     0     1     0     0     1     1     1     0     0     0     1     0     0     1     1     1     1     0     1     1

>> uniformcrossover

ans =

     0     0     1     0     0     0     1     0     1     1     1     0     1     0     0     1     1     0     1     0


ans =

     1     1     1     0     0     1     1     0     0     0     1     0     0     1     0     0     0     1     0     0


ans =

     0     0     1     0     0     0     1     0     1     1     1     0     1     0     0     1     1     0     1     0

K>> [SelectedPop(gene1,j), SelectedPop(gene2,j)] = deal(SelectedPop(gene2,j), SelectedPop(gene1,j));
>> uniformcrossover

ans =

     0     1     0     0     1     0     1     1     0     1     1     0     0     0     1     0     1     0     1     1


ans =

     0     1     0     0     1     0     1     1     0     1     1     0     0     0     1     0     1     0     1     1


ans =

     1     1     0     0     1     0     1     1     0     1     1     0     0     0     1     0     1     0     1     1

K>> SelectedPop(gene1,j)

ans =

     1

>> uniformcrossover

ans =

     0     1     1     0     0     0     0     1     0     1     0     0     1     1     1     0     0     0     0     0


ans =

     0     1     1     0     0     1     1     0     0     0     0     1     1     0     1     0     0     1     0     0


ans =

     0     1     1     0     0     0     0     1     0     1     0     0     1     1     1     0     0     0     0     0


ans =

     0     1     1     0     0     1     1     0     0     0     0     1     1     0     1     0     0     1     0     0

>> uniformcrossover

ans =

     1     0     1     1     1     1     0     0     1     1     1     0     0     1     0     1     0     0     0     0


ans =

     1     1     0     1     0     0     1     0     1     1     0     1     1     1     0     1     0     1     1     0


ans =

     1     0     1     1     1     1     0     0     1     1     1     0     0     1     0     1     0     0     0     0


ans =

     1     1     0     1     0     0     1     0     1     1     0     1     1     1     0     1     0     1     1     0

>> uniformcrossover
>> uniformcrossover

ans =

     1     1     0     0     0     0     0     0     1     0     0     1     0     0     1     0     1     0     1     0


ans =

     0     0     0     1     0     1     1     1     1     0     0     1     0     0     1     1     1     0     1     0


ans =

     0     1     0     0     0     0     0     0     1     0     0     1     0     0     1     0     1     0     1     0


ans =

     1     0     0     1     0     1     1     1     1     0     0     1     0     0     1     1     1     0     1     0


ans =

     0     1     0     0     0     0     0     0     1     0     0     1     0     0     1     0     1     0     1     0


ans =

     1     0     0     1     0     1     1     1     1     0     0     1     0     0     1     1     1     0     1     0


ans =

     0     0     0     0     0     0     0     0     1     0     0     1     0     0     1     0     1     0     1     0

>> npointcrossover
>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> npointcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> uniformcrossover

FitnessRun =

   1.2705e-07


ans =

  -3.5645e-04

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> uniformcrossover

FitnessRun =

   5.9605e-10


ans =

   2.4414e-05

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> uniformcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> randi(2,2,2)

ans =

     1     2
     1     1

>> randi(10,2,2)

ans =

     1     3
     7     4

>> randi(5,5,2)

ans =

     1     1
     2     5
     4     1
     5     3
     4     3

>> randi([1,5],5,2)

ans =

     2     1
     1     4
     4     3
     5     4
     1     4

>> randi(5,5,2)

ans =

     3     5
     3     5
     5     1
     5     3
     1     4

>> randi(5,5,2)

ans =

     4     5
     4     1
     5     3
     5     2
     3     2

>> randi(5,5,2)

ans =

     2     3
     5     3
     3     1
     2     4
     5     1

>> randperm(5)

ans =

     1     4     3     5     2

>> randperm(5)

ans =

     2     3     5     1     4

>> a = zeros(5,)
 a = zeros(5,)
             |
Error: Unbalanced or unexpected parenthesis or bracket.
 
>> a = zeros(5,2)

a =

     0     0
     0     0
     0     0
     0     0
     0     0

>> a(:,1)

ans =

     0
     0
     0
     0
     0

>> a(:,1) = randperm(5)

a =

     3     0
     4     0
     1     0
     2     0
     5     0

>> a(:,1:2) = randperm(5)
Subscripted assignment dimension mismatch.
 
>> a(:,2) = randperm(5)

a =

     3     1
     4     2
     1     5
     2     3
     5     4

>> (randperm(5),randperm(5))
 (randperm(5),randperm(5))
             |
Error: Expression or statement is incorrect--possibly unbalanced (, {, or [.
 
>> [randperm(5),randperm(5)]

ans =

     2     5     3     1     4     5     2     3     4     1

>> [randperm(5);randperm(5)]

ans =

     4     3     1     2     5
     5     3     1     4     2

>> a(:,1:2) = [randperm(5);randperm(5)]
Subscripted assignment dimension mismatch.
 
>> a(:,1) = randperm(5)

a =

     5     1
     1     2
     3     5
     2     3
     4     4

>> a(:,1:2)

ans =

     5     1
     1     2
     3     5
     2     3
     4     4

>> threeparentcrossover
>> threeparentcrossover
>> threeparentcrossover

FitnessRun =

    0.0016


ans =

   -0.0400

>> threeparentcrossover
>> threeparentcrossover

FitnessRun =

   2.3842e-11


ans =

  -4.8828e-06

>> threeparentcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> threeparentcrossover

FitnessRun =

   2.3842e-11


ans =

   4.8828e-06

>> randperm(5)